/*
#include <stdio.h>
#include <stdlib.h>
int main()
{
	int re;
	re=system("ls -l");
	printf("%s",re);
	return 0;
}
*/


/*
#include <sys/types.h>
#include <sys/stat.h>
int main()
{
	chmod("./tmp",S_IRUSR|S_IWUSR|S_IRGRP|S_IWOTH);
	return 0;
}
*/

/*
#include <sys/stat.h>
#include <unistd.h>
#include <stdio.h>
int main()
{
	struct stat buf;
	stat("./tmp",&buf);
	printf("%d",buf.st_size);
	return 0;
}
*/

/*
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
int main()
{
	int fd;
	fd=creat("aasda",S_IRUSR);
	 close(fd);
	return 0;
}
*/


/*
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
int main()
{
	int fd;
	char buf[100];
	fd=read(STDIN_FILENO,&buf,80);
	printf("%s",buf);
	return 0;
}

*/

/*
#include <unistd.h>
#include <stdlib.h>
#include <fcntl.h>
#include <stdio.h>
int main()
{
	int fd;
	int fp;
	char buf[1000];
	fd=open("/etc/passwd",O_RDONLY);
	printf("%d\n",fd);
	int t=read(fd,buf,100);
	printf("%d\n",t);
	fp=open("./passwd",O_WRONLY|O_CREAT,0666);
	write(fp,buf,t);
	close(fd);
	close(fp);
	return 0;
}
*/

/*
#include <unistd.h>
#include <fcntl.h>
#include <stdio.h>
#include <errno.h>
#include <stdlib.h>
#include <stdio.h>

int main()
{
	int fd;
	fd=open("/dev/tty",O_RDONLY&~O_NONBLOCK);
	if(fd<0)
	{
		perror("open /dev/tty:");
		exit(1);
	}
	int i,n;
	char buf[100];
	for(i=0;i<5;i++)
	{
		n=read(fd,buf,10);
		printf("%d\t",n);
		//sleep(1);
	}
	close(fd);
}
*/





/*
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/file.h>
#include <sys/types.h>
#include <sys/stat.h>
void lockset(int fd,int type)
{
	struct flock lock;
	int flag;
	lock.l_whence=SEEK_SET;
	lock.l_start=0;
	lock.l_len=0;
	lock.l_type=type;
	flag=fcntl(fd,F_GETLK,0);
	printf("%d\n",flag);
	fcntl(fd,F_SETLK,&lock);

}
int main()
{
	int fd=open("passwd",O_RDWR);
	int flag=fcntl(fd,F_GETFL,0);
	printf("%d\n",flag);
	flag|=O_NONBLOCK;
	fcntl(fd,F_SETFL,flag);
	lockset(fd,F_RDLCK);
	lockset(fd,F_UNLCK);
	close(fd);
	return 0;
}
*/


/*
#include <stdio.h>
#include <stdlib.h>
int main()
{
	FILE *fp;
	char ch;
	if((fp=fopen("passwd","w"))==NULL)
	{
		exit(0);
	}
	ch=fgetc(stdin);
	fputc(ch,fp);
	return 0;
}
*/

/*
#include <stdio.h>
int main()
{
	FILE *p;
	char ch[100];
	p=fopen("passwd","a+");
	fgets(ch,3,p);
	printf("%s",ch);
	return 0;
}
*/
