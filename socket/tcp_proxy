#! coding: utf-8
import sys
import socket
import threading


def server_loop(local_host, local_port, remote_host, remote_port, receive_first):
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        server.bind((local_host, local_port))
    except:
        print "[!!]Failed to listen on %s:%d" (local_host, local_port)
        sys.exit(0)
    print "[*]Listening on %s:%d" % (local_host, local_port)
    server.listen(5)
    while True:
        client_socket, addr= server.accept()
        print "[=>]Received incoming cinnection fomr %s:%d" %(addr[0], addr[1])
        # open a thread to connect remote
        proxy_thread = threading.Thread(target=proxy_handler, args=(client_socket, remote_host, remote_port, receive_first))
        proxy_thread.start()


def proxy_handler(client_socket, remote_host, remote_port, receive_first):
    # 连接远程主机
    remote_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    remote_socket.connect((remote_host, remote_port))
    
    # 若果
def main():
    if len(sys.args[1:]) != 5:
        print "Usage: ./proxy.py [localhost][localport][remotehost][remoteport][receive_first]"
        print "Example: ./proxy.py 127.0.0.1 9000 10.12.132.1 9000 True"
        sys.exit(0)
    # 设置本地监听参数
    local_host = sys.argv[1]
    local_port = int(sys.argv[2])

    # 设置远程目标
    remote_host = sys.argv[3]
    remote_port = int(sys.argv[4])

    # 告诉代理在发送给远程主机之前链接和接受数据
    receive_first = sys.argv[5]

    if "True" in receive_first:
        receive_first = True
    else:
        receive_first = False

    # 设置好监听的socket
    server_loop(local_host, local_port, remote_host, remote_port, receive_first)
